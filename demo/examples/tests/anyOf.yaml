openapi: 3.0.1
info:
  title: AnyOf Variations API
  description: Demonstrates various anyOf combinations.
  version: 1.0.0
tags:
  - name: anyOf
    description: anyOf tests
paths:
  /anyof-primitives:
    get:
      tags:
        - anyOf
      summary: anyOf with primitives
      description: |
        Schema:
        ```yaml
        anyOf:
          - type: string
          - type: integer
          - type: boolean
          - type: null
        ```
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                anyOf:
                  - type: string
                  - type: integer
                  - type: boolean
                  - type: "null"

  /anyof-oneof:
    get:
      tags:
        - anyOf
      summary: anyOf with oneOf
      description: |
        Schema:
        ```yaml
        anyOf:
          - oneOf:
            - type: string
            - type: integer
          - type: boolean
        ```
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                anyOf:
                  - oneOf:
                      - type: string
                        title: A string
                      - type: integer
                        title: An integer
                    title: A string or integer
                  - type: boolean
                    title: A boolean
                title: A string or integer, or a boolean

  /anyof-with-properties-in-array-item:
    get:
      tags:
        - anyOf
      summary: anyOf with Properties in Array Item
      description: |
        Schema:
        ```yaml
        type: array
        items:
          type: object
          anyOf:
            - type: object
              title: Item
              properties:
                orderNo:
                  type: string
                  example: "123456"
            - type: object
              title: Error
              properties:
                error:
                  type: string
                  example: "Invalid order number"
          properties:
            name:
              type: string
              example: pencil
          required:
            - orderNo
        ```
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  anyOf:
                    - type: object
                      title: Item
                      properties:
                        orderNo:
                          type: string
                          example: "123456"
                    - type: object
                      title: Error
                      properties:
                        error:
                          type: string
                          example: "Invalid order number"
                  properties:
                    name:
                      type: string
                      example: pencil
                  required:
                    - orderNo
